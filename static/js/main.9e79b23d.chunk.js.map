{"version":3,"sources":["settings/errorHandling.js","settings/index.js","helpers/errorBoundary.js","components/Code.js","state/utils/createReducer.js","components/Header.js","components/Fetch.js","components/App.js","state/utils/fetch.js","state/ducks/user/reducers.js","state/ducks/user/types.js","state/ducks/user/actions.js","state/ducks/user/index.js","containers/App.js","state/middlewares/apiService.js","state/middlewares/logger.js","helpers/serviceWorker.js","index.js","state/store.js"],"names":["R","require","errors","codeMirror","header","_wrong","messages","displayRandomMessageFromArray","list","type","Math","floor","random","length","errorHandling","reason","arguments","undefined","message","response","tryCatch","Boolean","ok","Error","statusText","_settings","process","REACT_APP_TARGET","concat","settings","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","details","setState","react_default","a","createElement","id","displayError","toString","componentStack","children","Component","initialState","reducerMap","options","lineNumbers","mode","Code","_ref","_ref$code","code","handler","errorBoundary_ErrorBoundary","Codemirror_default","value","onChange","Header","_ref$gist","gist","saver","className","onClick","getFirstSegment","compose","nth","split","App","saveFunc","console","log","handleChange","pathname","location","others","components_Header","components_Code","parseStatus","status","res","Promise","resolve","reject","then","x","JSON","parse","e","jsonParse","userReducer","_createReducer","defineProperty","action","payload","reducer","combineReducers","data","userFetch","idToken","meta","async","blocking","path","method","auth","userSetup","ethereumAddress","termsAccepted","userData","body","userUpdate","mapDispatchToProps","userOperations","connect","user","apiService","next","result","_action$meta","_action$meta$method","url","_headers","headers","objectSpread","Accept","Content-Type","stringify","isomorphicFetch","text","fetch","Authorization","handleResponse","err","handleErrors","REGULAR","join","SUCCESS","STARTED","FAILURE","createLogger","active","store","prevState","getState","nextState","groupCollapsed","info","apply","logGroupCollapsed","indexOf","determineStyle","logInfo","groupEnd","logGroupEnd","_console","window","hostname","match","reduxStore","rootReducer","reducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunk","immutableStateInvariantMiddleware","configureStore","ReactDOM","render","es","BrowserRouter","basename","Route","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e79b23d.chunk.js","sourcesContent":["const R = require('ramda')\n\nfunction handleErrors (response) {\n  const tryer = (response) => Boolean(response.ok)\n  const catcher = (response) => { throw Error(response.statusText) }\n  R.tryCatch(tryer, catcher)(response)\n}\n\nconst errors = { // Possibly funny list of possible error messages\n  codeMirror: [\n    'External plugin CodeMirror made a HUGE mistake',\n    'CodeMirror reflects nothing!'\n  ],\n  header: [\n    'No header today',\n    'Save buttons are missed'\n  ],\n  _wrong: [ // error(s) for wrong error reason\n    'Really sad, but there is an error in the error message. Sorry.'\n  ]\n}\n\nconst messages = {\n  _wrong: [ // message(s) for wrong error reason\n    'Really sad, but there is an error in the error message. Sorry.'\n  ]\n}\n\nexport function displayMessage (message = 'others') {\n  return displayRandomMessageFromArray(messages, message)\n}\n\nexport function displayError (reason = 'others') {\n  return displayRandomMessageFromArray(errors, reason)\n}\n\nfunction displayRandomMessageFromArray (list, type) {\n  const messages = list[type] || list['_wrong']\n  const random = Math.floor(Math.random() * Math.floor(messages.length))\n  return messages[random]\n}\n\nexport default [\n  errors,\n  messages,\n  displayError,\n  displayMessage,\n  handleErrors\n]\n","const _settings = {\n  siteName: 'Another Gist'\n}\n\nlet settings\nif (process.env.NODE_ENV === 'production') {\n  // The app is a production packaged build\n  if (process.env.REACT_APP_TARGET === 'staging') {\n    // Use staging settings\n    settings = {\n      siteName: `${_settings.siteName} (staging)`\n    }\n  } else {\n    settings = {\n      siteName: _settings.siteName\n    }\n  }\n} else if (process.env.NODE_ENV === 'development') {\n  // The app is in development mode\n  settings = {\n    siteName: `${_settings.siteName} (development)`\n  }\n}\n\n// Possibly funny list of possible error messages\nexport const errors = {\n  codeMirror: [\n    'External plugin CodeMirror made a HUGE mistake.',\n    'CodeMirror reflects nothing!'\n  ],\n  // message(s) for wrong error reason\n  _wrong: [\n    'Really sad, but there is an error in the error message. Sorry.'\n  ]\n}\n\nexport const messages = {\n  // message(s) for wrong error reason\n  _wrong: [\n    'Really sad, but there is an error in the error message. Sorry.'\n  ]\n}\n\nexport function displayMessage (message = 'others') {\n  return displayRandomMessageFromArray(messages, message)\n}\n\nexport function displayError (reason = 'others') {\n  return displayRandomMessageFromArray(errors, reason)\n}\n\nfunction displayRandomMessageFromArray (list, type) {\n  const messages = list[type] || list['_wrong']\n  const random = Math.floor(Math.random() * Math.floor(messages.length))\n  return messages[random]\n}\n\nexport default settings\n","import React, { Component } from 'react'\nimport { displayError } from '../settings/index'\n\nexport default class ErrorBoundary extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      error: null,\n      details: null\n    }\n  }\n\n  componentDidCatch (error, details) {\n    this.setState({error, details})\n  }\n\n  render () {\n    const reason = this.props && this.props.reason\n\n    if (this.state.error) {\n      return (\n        <div id='errorBlock'>\n          <h2>Oh-no! Something went wrong</h2>\n          { reason && <h3>{displayError(reason)} </h3> }\n          <section>\n            <h4>{this.state.error && this.state.error.toString()} stack</h4>\n            <pre><code>\n              {this.state.details.componentStack}\n            </code></pre>\n          </section>\n        </div>\n      )\n    }\n    return this.props.children\n  }\n}\n\nexport { errors } from '../settings/index'\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport errors from '../settings/errorHandling'\nimport ErrorBoundary from '../helpers/errorBoundary'\nimport CodeMirror from 'react-codemirror'\nrequire('codemirror/mode/javascript/javascript')\nrequire('codemirror/mode/xml/xml')\nrequire('codemirror/mode/markdown/markdown')\nrequire('codemirror/lib/codemirror.css')\n\nconst options = {\n  lineNumbers: true,\n  mode: 'javascript'\n}\n\nconst Code = ({ code = '/* ES5 highlighting only */', handler }) => {\n  return (\n    <ErrorBoundary reason={errors.codeMirror}>\n      <CodeMirror\n        value={code}\n        options={options}\n        onChange={(code) => handler(code)}\n      />\n    </ErrorBoundary>\n  )\n}\n\nCode.propTypes = {\n  code: PropTypes.string.isRequired\n}\n\nexport default Code\n","export default (initialState, reducerMap) => (state = initialState, action) => {\n  const reducer = reducerMap[action.type]\n  return reducer ? reducer(state, action) : state\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport errors from '../settings/errorHandling'\nimport ErrorBoundary from '../helpers/errorBoundary'\n\nconst Header = ({ gist: header = 'new', code, saver }) => {\n  return (\n    <ErrorBoundary reason={errors.header}>\n      <h1>Gist <span className={'gistName'}>{header}</span></h1>\n      <button\n        onClick={(code) => saver(code)}\n      >Save</button>\n    </ErrorBoundary>\n  )\n}\n\nHeader.propTypes = {\n  gist: PropTypes.string.isRequired,\n  code: PropTypes.string.isRequired,\n  saver: PropTypes.func.isRequired\n}\n\nexport default Header\n","const R = require('ramda')\n\n// we need the second element, because:\n// element 0 is empty after split ('/URI')\nconst getFirstSegment = R.compose(R.nth(1), R.split('/'))\nconst gistAddress = path => getFirstSegment(path)\n\nconst fetchCode = (address) => address + ' code is { ... }'\n\nexport { gistAddress, fetchCode }\n","import React, { Component } from 'react'\nimport Code from './Code'\nimport Header from './Header'\nimport ErrorBoundary, { errors } from '../helpers/errorBoundary'\nimport { gistAddress, fetchCode } from './Fetch'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      code: ''\n    }\n  }\n\n  saveFunc = () => {\n    console.log(this.state.code + ' saved')\n  }\n\n  handleChange = (code) => {\n    this.setState({ code })\n  }\n\n  render () {\n    const pathname = this.props && this.props.location && this.props.location.pathname\n    const gist = gistAddress(pathname)\n    const code = fetchCode(gist)\n\n    return (\n      <ErrorBoundary reason={errors.others}>\n        <Header gist={gist} code={code} saver={this.saveFunc} />\n        <Code code={code} handler={this.handleChange} />\n      </ErrorBoundary>\n    )\n  }\n}\n\nexport default App\n","import isomorphicFetch from 'isomorphic-fetch'\n\nexport const jsonParse = x => {\n  try {\n    return JSON.parse(x)\n  } catch (e) {\n    return null\n  }\n}\n\nexport default (url, method, body, _headers) => {\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    ..._headers\n  }\n  const options = {\n    method,\n    headers,\n    body: method !== 'GET' ? JSON.stringify(body) : null\n  }\n\n  return isomorphicFetch(url, options).then(res =>\n    parseStatus(res.status, res.text()))\n}\n\nexport const parseStatus = (status, res) => {\n  return new Promise((resolve, reject) => {\n    if (status >= 200 && status < 300) {\n      res.then(response => {\n        resolve(jsonParse(response))\n      })\n    } else {\n      res.then(response => reject(new Error(`${status}: ${response}`)))\n    }\n  })\n}\n","import { combineReducers } from 'redux'\nimport * as types from './types'\nimport { createReducer } from '../../utils'\n\nexport const userReducer = createReducer(null, {\n  [types.USER_FETCH_COMPLETED]: (state, action) => action.payload,\n  [types.USER_SETUP_COMPLETED]: (state, action) => action.payload,\n  [types.USER_UPDATE_COMPLETED]: (state, action) => action.payload\n})\n\nexport default combineReducers({\n  data: userReducer\n})\n","export const USER_FETCH = 'agist/USER_FETCH'\nexport const USER_FETCH_COMPLETED = 'agist/USER_FETCH_COMPLETED'\nexport const USER_FETCH_FAILED = 'agist/USER_FETCH_FAILED'\n\nexport const USER_SETUP = 'agist/USER_SETUP'\nexport const USER_SETUP_COMPLETED = 'agist/USER_SETUP_COMPLETED'\nexport const USER_SETUP_FAILED = 'agist/USER_SETUP_FAILED'\n\nexport const USER_UPDATE = 'agist/USER_UPDATE'\nexport const USER_UPDATE_COMPLETED = 'agist/USER_UPDATE_COMPLETED'\nexport const USER_UPDATE_FAILED = 'agist/USER_UPDATE_FAILED'\n","import * as types from './types'\n\nexport const userFetch = idToken => ({\n  type: types.USER_FETCH,\n  meta: {\n    async: true,\n    blocking: true,\n    path: '/user',\n    method: 'GET',\n    auth: idToken\n  }\n})\n\nexport const userSetup = (idToken, ethereumAddress, termsAccepted, userData) => ({\n  type: types.USER_SETUP,\n  meta: {\n    async: true,\n    blocking: true,\n    path: '/user/setup',\n    method: 'PUT',\n    auth: idToken,\n    body: { ethereumAddress, termsAccepted, userData }\n  }\n})\n\nexport const userUpdate = (idToken, ethereumAddress) => ({\n  type: types.USER_UPDATE,\n  meta: {\n    async: true,\n    blocking: true,\n    path: '/user/update',\n    method: 'PUT',\n    auth: idToken,\n    body: { ethereumAddress }\n  }\n})\n","import reducer from './reducers'\n\nimport * as userOperations from './operations'\n\nexport { userOperations }\n\nexport default reducer\n","import { connect } from 'react-redux'\nimport App from '../components/App'\nimport { userOperations } from '../state/ducks/user'\n\nexport const mapStateToProps = state => ({\n  user: state.user\n})\n\nexport const mapDispatchToProps = {\n  userFetch: userOperations.userFetch\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { fetch } from '../utils'\n\nconst apiService = () => next => action => {\n  const result = next(action)\n  if (!action.meta || !action.meta.async) {\n    return result\n  }\n\n  const { path, method = 'GET', body, auth } = action.meta\n\n  if (!path) {\n    throw new Error(`'path' not specified for async action ${action.type}`)\n  }\n\n  const url = ``\n\n  const headers = {\n    Authorization: auth\n  }\n\n  return fetch(url, method, body, headers).then(\n    res => handleResponse(res, action, next),\n    err => handleErrors(err, action, next)\n  )\n}\n\nexport default apiService\n\nfunction handleErrors (err, action, next) {\n  next({\n    type: `${action.type}_FAILED`,\n    payload: err,\n    meta: action.meta\n  })\n\n  return Promise.reject(err)\n}\n\nfunction handleResponse (res, action, next) {\n  next({\n    type: `${action.type}_COMPLETED`,\n    payload: res,\n    meta: action.meta\n  })\n\n  return res\n}\n","const REGULAR = ['background: blue', 'color: white'].join(';')\n\nconst SUCCESS = ['background: green', 'color: white'].join(';')\n\nconst STARTED = ['background: darkorange', 'color: white'].join(';')\n\nconst FAILURE = ['background: red', 'color: white'].join(';')\n\nconst createLogger = (active = true) => store => next => action => {\n  if (!active) {\n    return next(action)\n  }\n\n  const prevState = store.getState()\n  const result = next(action)\n  const nextState = store.getState()\n  logGroupCollapsed(`%c ${action.type} `, determineStyle(action))\n  logInfo('%cprev state', 'color: darkorange', prevState)\n  logInfo('%caction payload', 'color: blue', action.payload)\n  logInfo('%cnext state', 'color: darkgreen', nextState)\n  logGroupEnd()\n  return result\n}\n\nexport default createLogger\n\nfunction logGroupCollapsed (...args) {\n  const logFunction = typeof console.groupCollapsed === 'function'\n    ? console.groupCollapsed\n    : console.info\n  logFunction(...args)\n}\n\nfunction logGroupEnd (...args) {\n  const logFunction = typeof console.groupEnd === 'function'\n    ? console.groupEnd\n    : console.info\n  logFunction(...args)\n}\n\nfunction logInfo (...args) {\n  console.info(...args)\n}\n\nfunction determineStyle (action) {\n  if (!action.meta || !action.meta.async) {\n    return REGULAR\n  }\n\n  if (action.type.indexOf('_COMPLETED') > -1) {\n    return SUCCESS\n  }\n\n  if (action.type.indexOf('_FAILED') > -1) {\n    return FAILURE\n  }\n\n  return STARTED\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport App from './containers/App'\nimport configureStore from './state/store'\nimport { errors } from './settings'\nimport ErrorBoundary from './helpers/errorBoundary'\nimport * as serviceWorker from './helpers/serviceWorker'\n\nconst reduxStore = configureStore()\n\nReactDOM.render(\n  <ErrorBoundary reason={errors.others}>\n    <ReduxProvider store={reduxStore}>\n      <BrowserRouter basename={'/agist/'}>\n        <Route path='/*' component={App} />\n      </BrowserRouter>\n    </ReduxProvider>\n  </ErrorBoundary>,\n  document.getElementById('app')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport * as reducers from './ducks'\nimport { apiService, createLogger } from './middlewares'\nimport immutableStateInvariantMiddleware from 'redux-immutable-state-invariant'\n\nexport default function configureStore (initialState) {\n  const rootReducer = combineReducers(reducers)\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ||\n    compose\n\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(\n      applyMiddleware(\n        apiService,\n        thunk,\n        createLogger(true),\n        immutableStateInvariantMiddleware()\n      )\n    )\n  )\n}\n"],"sourceRoot":""}