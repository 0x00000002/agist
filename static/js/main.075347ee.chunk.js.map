{"version":3,"sources":["settings/errorHandling.js","settings/index.js","helpers/errorBoundary.js","components/Code.js","state/utils/createReducer.js","components/Fetch.js","components/App.js","state/utils/fetch.js","state/ducks/user/reducers.js","state/ducks/user/types.js","state/ducks/user/actions.js","state/ducks/user/index.js","containers/App.js","state/middlewares/apiService.js","state/middlewares/logger.js","helpers/serviceWorker.js","index.js","state/store.js"],"names":["R","require","errors","codeMirror","_wrong","messages","displayRandomMessageFromArray","list","type","Math","floor","random","length","errorHandling","reason","arguments","undefined","message","response","tryCatch","Boolean","ok","Error","statusText","_settings","process","REACT_APP_TARGET","concat","settings","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","details","setState","react_default","a","createElement","id","displayError","toString","componentStack","children","Component","initialState","reducerMap","options","lineNumbers","mode","Code","code","errorBoundary_ErrorBoundary","Codemirror_default","value","getFirstSegment","compose","nth","split","gistAddress","path","App","gist","location","pathname","others","components_Code","parseStatus","status","res","Promise","resolve","reject","then","x","JSON","parse","e","jsonParse","userReducer","_createReducer","defineProperty","action","payload","reducer","combineReducers","data","userFetch","idToken","meta","async","blocking","method","auth","userSetup","ethereumAddress","termsAccepted","userData","body","userUpdate","mapDispatchToProps","userOperations","connect","user","apiService","next","result","_action$meta","_action$meta$method","url","_headers","headers","objectSpread","Accept","Content-Type","stringify","isomorphicFetch","text","fetch","Authorization","handleResponse","err","handleErrors","REGULAR","join","SUCCESS","STARTED","FAILURE","createLogger","active","store","prevState","getState","nextState","console","groupCollapsed","info","apply","logGroupCollapsed","indexOf","determineStyle","logInfo","groupEnd","logGroupEnd","_console","window","hostname","match","reduxStore","rootReducer","reducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunk","immutableStateInvariantMiddleware","configureStore","ReactDOM","render","es","BrowserRouter","basename","Route","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.075347ee.chunk.js","sourcesContent":["const R = require('ramda')\n\nfunction handleErrors (response) {\n  const tryer = (response) => Boolean(response.ok)\n  const catcher = (response) => { throw Error(response.statusText) }\n  R.tryCatch(tryer, catcher)(response)\n}\n\nconst errors = { // Possibly funny list of possible error messages\n  codeMirror: [\n    'External plugin CodeMirror made a HUGE mistake.',\n    'CodeMirror reflects nothing!'\n  ],\n  _wrong: [ // error(s) for wrong error reason\n    'Really sad, but there is an error in the error message. Sorry.'\n  ]\n}\n\nconst messages = {\n  _wrong: [ // message(s) for wrong error reason\n    'Really sad, but there is an error in the error message. Sorry.'\n  ]\n}\n\nexport function displayMessage (message = 'others') {\n  return displayRandomMessageFromArray(messages, message)\n}\n\nexport function displayError (reason = 'others') {\n  return displayRandomMessageFromArray(errors, reason)\n}\n\nfunction displayRandomMessageFromArray (list, type) {\n  const messages = list[type] || list['_wrong']\n  const random = Math.floor(Math.random() * Math.floor(messages.length))\n  return messages[random]\n}\n\nexport default [\n  errors,\n  messages,\n  displayError,\n  displayMessage,\n  handleErrors\n]\n","const _settings = {\n  siteName: 'Another Gist'\n}\n\nlet settings\nif (process.env.NODE_ENV === 'production') {\n  // The app is a production packaged build\n  if (process.env.REACT_APP_TARGET === 'staging') {\n    // Use staging settings\n    settings = {\n      siteName: `${_settings.siteName} (staging)`\n    }\n  } else {\n    settings = {\n      siteName: _settings.siteName\n    }\n  }\n} else if (process.env.NODE_ENV === 'development') {\n  // The app is in development mode\n  settings = {\n    siteName: `${_settings.siteName} (development)`\n  }\n}\n\n// Possibly funny list of possible error messages\nexport const errors = {\n  codeMirror: [\n    'External plugin CodeMirror made a HUGE mistake.',\n    'CodeMirror reflects nothing!'\n  ],\n  // message(s) for wrong error reason\n  _wrong: [\n    'Really sad, but there is an error in the error message. Sorry.'\n  ]\n}\n\nexport const messages = {\n  // message(s) for wrong error reason\n  _wrong: [\n    'Really sad, but there is an error in the error message. Sorry.'\n  ]\n}\n\nexport function displayMessage (message = 'others') {\n  return displayRandomMessageFromArray(messages, message)\n}\n\nexport function displayError (reason = 'others') {\n  return displayRandomMessageFromArray(errors, reason)\n}\n\nfunction displayRandomMessageFromArray (list, type) {\n  const messages = list[type] || list['_wrong']\n  const random = Math.floor(Math.random() * Math.floor(messages.length))\n  return messages[random]\n}\n\nexport default settings\n","import React, { Component } from 'react'\nimport { displayError } from '../settings/index'\n\nexport default class ErrorBoundary extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      error: null,\n      details: null\n    }\n  }\n\n  componentDidCatch (error, details) {\n    this.setState({error, details})\n  }\n\n  render () {\n    const reason = this.props && this.props.reason\n\n    if (this.state.error) {\n      return (\n        <div id='errorBlock'>\n          <h2>Oh-no! Something went wrong</h2>\n          { reason && <h3>{displayError(reason)} </h3> }\n          <section>\n            <h4>{this.state.error && this.state.error.toString()} stack</h4>\n            <pre><code>\n              {this.state.details.componentStack}\n            </code></pre>\n          </section>\n        </div>\n      )\n    }\n    return this.props.children\n  }\n}\n\nexport { errors } from '../settings/index'\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport errors from '../settings/errorHandling'\nimport ErrorBoundary from '../helpers/errorBoundary'\nimport CodeMirror from 'react-codemirror'\nrequire('codemirror/mode/javascript/javascript')\nrequire('codemirror/mode/xml/xml')\nrequire('codemirror/mode/markdown/markdown')\nrequire('codemirror/lib/codemirror.css')\n\nconst options = {\n  lineNumbers: true,\n  mode: 'javascript'\n}\n\nclass Code extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      code: this.props.code || '/* ES5 highlighting only */'\n    }\n  }\n\n  render () {\n    return (\n      <ErrorBoundary reason={errors.codeMirror}>\n        <CodeMirror\n          value={this.state.code}\n          options={options}\n        />\n      </ErrorBoundary>\n    )\n  }\n}\n\nCode.propTypes = {\n  code: PropTypes.string.isRequired\n}\n\nexport default Code\n","export default (initialState, reducerMap) => (state = initialState, action) => {\n  const reducer = reducerMap[action.type]\n  return reducer ? reducer(state, action) : state\n}\n","\nconst R = require('ramda')\n// we need the second element, because:\n// element 0 is empty after split ('/URI')\nconst getFirstSegment = R.compose(R.nth(1), R.split('/'))\nconst gistAddress = path => getFirstSegment(path)\n\nexport default gistAddress\n","import React, { Component } from 'react'\nimport Code from './Code'\nimport ErrorBoundary, { errors } from '../helpers/errorBoundary'\nimport gistAddress from './Fetch'\n\nclass App extends Component {\n  render () {\n    debugger\n    const gist = gistAddress(this.props.location.pathname)\n\n    return (\n      <ErrorBoundary reason={errors.others}>\n        <h1>Create A Gist</h1>\n        <Code code={gist} />\n      </ErrorBoundary>\n    )\n  }\n}\n\nexport default App\n","import isomorphicFetch from 'isomorphic-fetch'\n\nexport const jsonParse = x => {\n  try {\n    return JSON.parse(x)\n  } catch (e) {\n    return null\n  }\n}\n\nexport default (url, method, body, _headers) => {\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    ..._headers\n  }\n  const options = {\n    method,\n    headers,\n    body: method !== 'GET' ? JSON.stringify(body) : null\n  }\n\n  return isomorphicFetch(url, options).then(res =>\n    parseStatus(res.status, res.text()))\n}\n\nexport const parseStatus = (status, res) => {\n  return new Promise((resolve, reject) => {\n    if (status >= 200 && status < 300) {\n      res.then(response => {\n        resolve(jsonParse(response))\n      })\n    } else {\n      res.then(response => reject(new Error(`${status}: ${response}`)))\n    }\n  })\n}\n","import { combineReducers } from 'redux'\nimport * as types from './types'\nimport { createReducer } from '../../utils'\n\nexport const userReducer = createReducer(null, {\n  [types.USER_FETCH_COMPLETED]: (state, action) => action.payload,\n  [types.USER_SETUP_COMPLETED]: (state, action) => action.payload,\n  [types.USER_UPDATE_COMPLETED]: (state, action) => action.payload\n})\n\nexport default combineReducers({\n  data: userReducer\n})\n","export const USER_FETCH = 'agist/USER_FETCH'\nexport const USER_FETCH_COMPLETED = 'agist/USER_FETCH_COMPLETED'\nexport const USER_FETCH_FAILED = 'agist/USER_FETCH_FAILED'\n\nexport const USER_SETUP = 'agist/USER_SETUP'\nexport const USER_SETUP_COMPLETED = 'agist/USER_SETUP_COMPLETED'\nexport const USER_SETUP_FAILED = 'agist/USER_SETUP_FAILED'\n\nexport const USER_UPDATE = 'agist/USER_UPDATE'\nexport const USER_UPDATE_COMPLETED = 'agist/USER_UPDATE_COMPLETED'\nexport const USER_UPDATE_FAILED = 'agist/USER_UPDATE_FAILED'\n","import * as types from './types'\n\nexport const userFetch = idToken => ({\n  type: types.USER_FETCH,\n  meta: {\n    async: true,\n    blocking: true,\n    path: '/user',\n    method: 'GET',\n    auth: idToken\n  }\n})\n\nexport const userSetup = (idToken, ethereumAddress, termsAccepted, userData) => ({\n  type: types.USER_SETUP,\n  meta: {\n    async: true,\n    blocking: true,\n    path: '/user/setup',\n    method: 'PUT',\n    auth: idToken,\n    body: { ethereumAddress, termsAccepted, userData }\n  }\n})\n\nexport const userUpdate = (idToken, ethereumAddress) => ({\n  type: types.USER_UPDATE,\n  meta: {\n    async: true,\n    blocking: true,\n    path: '/user/update',\n    method: 'PUT',\n    auth: idToken,\n    body: { ethereumAddress }\n  }\n})\n","import reducer from './reducers'\n\nimport * as userOperations from './operations'\n\nexport { userOperations }\n\nexport default reducer\n","import { connect } from 'react-redux'\nimport App from '../components/App'\nimport { userOperations } from '../state/ducks/user'\n\nexport const mapStateToProps = state => ({\n  user: state.user\n})\n\nexport const mapDispatchToProps = {\n  userFetch: userOperations.userFetch\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { fetch } from '../utils'\n\nconst apiService = () => next => action => {\n  const result = next(action)\n  if (!action.meta || !action.meta.async) {\n    return result\n  }\n\n  const { path, method = 'GET', body, auth } = action.meta\n\n  if (!path) {\n    throw new Error(`'path' not specified for async action ${action.type}`)\n  }\n\n  const url = ``\n\n  const headers = {\n    Authorization: auth\n  }\n\n  return fetch(url, method, body, headers).then(\n    res => handleResponse(res, action, next),\n    err => handleErrors(err, action, next)\n  )\n}\n\nexport default apiService\n\nfunction handleErrors (err, action, next) {\n  next({\n    type: `${action.type}_FAILED`,\n    payload: err,\n    meta: action.meta\n  })\n\n  return Promise.reject(err)\n}\n\nfunction handleResponse (res, action, next) {\n  next({\n    type: `${action.type}_COMPLETED`,\n    payload: res,\n    meta: action.meta\n  })\n\n  return res\n}\n","const REGULAR = ['background: blue', 'color: white'].join(';')\n\nconst SUCCESS = ['background: green', 'color: white'].join(';')\n\nconst STARTED = ['background: darkorange', 'color: white'].join(';')\n\nconst FAILURE = ['background: red', 'color: white'].join(';')\n\nconst createLogger = (active = true) => store => next => action => {\n  if (!active) {\n    return next(action)\n  }\n\n  const prevState = store.getState()\n  const result = next(action)\n  const nextState = store.getState()\n  logGroupCollapsed(`%c ${action.type} `, determineStyle(action))\n  logInfo('%cprev state', 'color: darkorange', prevState)\n  logInfo('%caction payload', 'color: blue', action.payload)\n  logInfo('%cnext state', 'color: darkgreen', nextState)\n  logGroupEnd()\n  return result\n}\n\nexport default createLogger\n\nfunction logGroupCollapsed (...args) {\n  const logFunction = typeof console.groupCollapsed === 'function'\n    ? console.groupCollapsed\n    : console.info\n  logFunction(...args)\n}\n\nfunction logGroupEnd (...args) {\n  const logFunction = typeof console.groupEnd === 'function'\n    ? console.groupEnd\n    : console.info\n  logFunction(...args)\n}\n\nfunction logInfo (...args) {\n  console.info(...args)\n}\n\nfunction determineStyle (action) {\n  if (!action.meta || !action.meta.async) {\n    return REGULAR\n  }\n\n  if (action.type.indexOf('_COMPLETED') > -1) {\n    return SUCCESS\n  }\n\n  if (action.type.indexOf('_FAILED') > -1) {\n    return FAILURE\n  }\n\n  return STARTED\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport App from './containers/App'\nimport configureStore from './state/store'\nimport { errors } from './settings'\nimport ErrorBoundary from './helpers/errorBoundary'\nimport * as serviceWorker from './helpers/serviceWorker'\n\nconst reduxStore = configureStore()\n\nReactDOM.render(\n  <ErrorBoundary reason={errors.others}>\n    <ReduxProvider store={reduxStore}>\n      <BrowserRouter basename={'/agist/'}>\n        <Route path='/agist/*' component={App} />\n      </BrowserRouter>\n    </ReduxProvider>\n  </ErrorBoundary>,\n  document.getElementById('app')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport * as reducers from './ducks'\nimport { apiService, createLogger } from './middlewares'\nimport immutableStateInvariantMiddleware from 'redux-immutable-state-invariant'\n\nexport default function configureStore (initialState) {\n  const rootReducer = combineReducers(reducers)\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ||\n    compose\n\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(\n      applyMiddleware(\n        apiService,\n        thunk,\n        createLogger(true),\n        immutableStateInvariantMiddleware()\n      )\n    )\n  )\n}\n"],"sourceRoot":""}